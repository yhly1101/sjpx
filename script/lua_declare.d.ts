declare const enum Scene {
	["default"] = "default",
	["城池"] = "城池",
	["宫殿"] = "宫殿",
	["家族图书馆"] = "家族图书馆",
	["家族大厅"] = "家族大厅",
	["异界边界"] = "异界边界",
	["战场"] = "战场",
}
declare const enum 游戏选项 {
}
declare const enum 单位标签 {
	["自动复活"] = "自动复活",
}
declare const enum 单位属性子类型 {
}
declare const enum 游戏属性 {
}
declare const enum 技能属性 {
}
declare const enum 伤害类型 {
}
declare const enum 玩家属性 {
}
declare const enum 单位字符串属性 {
}
declare const enum 单位属性 {
	["复活时间"] = "复活时间",
	["金币"] = "金币",
}
declare const enum 验证器代码 {
}
declare const enum 能量类型 {
}
declare const enum 血条类型 {
}
declare class _OBJ_smallcard_inventory_EquipAttributeFormat extends DataCache{
	Attribute:_OBJ__UnitAttribute;
	Format:_OBJ_smallcard_inventory_AttributeFormat;
	constructor()
}
declare class _OBJ_lib_control_技能摇杆GUIEvent extends DataCache{
	on_vj_release:(this: void, )=>void;
	on_vj_move_end:(this: void, )=>void;
	on_down:(this: void, )=>void;
	on_vj_move:(this: void, )=>void;
	on_vj_move_start:(this: void, )=>void;
	on_up:(this: void, )=>void;
	on_vj_press:(this: void, )=>void;
	constructor()
}
declare class _OBJ_lib_control_移动摇杆GUIEvent extends DataCache{
	on_vj_release:(this: void, )=>void;
	on_vj_press:(this: void, )=>void;
	on_vj_move:(this: void, )=>void;
	on_vj_move_start:(this: void, )=>void;
	on_vj_move_end:(this: void, )=>void;
	constructor()
}
declare class _OBJ_smallcard_inventory_inventory_config_Quality_Color extends _OBJ__inventory_config_inventory_config{
	Background:string;
	Color:string;
	Name:string;
	ActorArray:Array<IdPreset<"actor_id">>;
	ClassLink:IdPreset<"item_class_id">;
	Frame:string;
	Link:IdPreset<"inventory_config_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_inventory_config_Inventory_Config extends _OBJ__inventory_config_inventory_config{
	QualityColor:Array<undefined>;
	ShowDropArea:boolean;
	EnableInGameInventory:boolean;
	EnableInteractUI:boolean;
	ShowQuickBarLock:boolean;
	V2Special:boolean;
	Default_Frame:string;
	Character:string;
	ShowDefaultEntrance:boolean;
	TypeFilters:Array<IdPreset<"item_class_id">>;
	Name:string;
	InteractRange:number;
	EnableInteract:boolean;
	Filters:Array<IdPreset<"item_class_id">>;
	Special:string;
	EquipTypes:Array<IdPreset<"item_class_id">>;
	ShowCharacter:boolean;
	ShowQuickBarCollapse:boolean;
	EquipAttributeFormat:Array<_OBJ_smallcard_inventory_EquipAttributeFormat>;
	Link:IdPreset<"inventory_config_id">;
	constructor()
}
declare class _OBJ_smallcard_get_items_lobby_resource_gain_Lobby_Resource_Gain extends _OBJ__lobby_resource_gain_lobby_resource_gain{
	Count:number;
	LobbyResource:IdPreset<"lobby_resource_id">;
	Name:string;
	Link:IdPreset<"lobby_resource_gain_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_施法进度条 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	complete_delay:number;
	scale:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	progress_bar_image:string;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	static:boolean;
	round_corner_radius:number;
	CustomString:string;
	Name:string;
	break_delay:number;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	progress_bg_image:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_模块背包 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	inv_link:string;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	scale:number;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	round_corner_radius:number;
	Name:string;
	parameter:string;
	CustomString:string;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_msgbox_btn extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	scale:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	transition:_OBJ__GUITransition;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	flip_y:boolean;
	layout:_OBJ__GUILayout;
	swallow_event:boolean;
	round_corner_radius:number;
	rotate:number;
	Name:string;
	CustomString:string;
	static:boolean;
	mask_image:string;
	btn_image:string;
	text:string;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	icon_image:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_自定义背包格子 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	opacity:number;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	scale:number;
	show:boolean;
	swallow_events:string;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	drop_mode:_OBJ__DropMode;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_Buff图标 extends _OBJ__gui_ctrl_gui_ctrl{
	buff_pos_progress_type:string;
	buff_none_progress_type:string;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	swallow_events:string;
	buff_neg_progress_type:string;
	clip:boolean;
	buff_bg_neg_color:string;
	CustomString:string;
	buff:Buff;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	buff_margin:number;
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	buff_bg_none_color:string;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	round_corner_radius:number;
	opacity:number;
	buff_icon:string;
	static:boolean;
	font_size:number;
	buff_height:number;
	Name:string;
	buff_width:number;
	mask_image:string;
	rotate:number;
	layout:_OBJ__GUILayout;
	image:string;
	scale:number;
	show:boolean;
	buff_bg_pos_color:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_Buff列表 extends _OBJ__gui_ctrl_gui_ctrl{
	border:_OBJ__GUIBorder;
	rotate:number;
	enable_drop:boolean;
	buff_icon_template:string;
	scale:number;
	default_pos_cnt:number;
	CustomString:string;
	mask_image:string;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	buff_margin:number;
	default_neg_cnt:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	buff_cat_filter:string;
	opacity:number;
	default_none_cnt:number;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	round_corner_radius:number;
	unit:Unit;
	buff_icon:string;
	layout:_OBJ__GUILayout;
	z_index:number;
	buff_height:number;
	Name:string;
	buff_width:number;
	clip:boolean;
	swallow_events:string;
	buff_polarity:string;
	swallow_event:boolean;
	static:boolean;
	show:boolean;
	color:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_移动键盘 extends _OBJ__gui_ctrl_gui_ctrl{
	img_S_on:string;
	border:_OBJ__GUIBorder;
	img_D_off:string;
	enable_drop:boolean;
	swallow_events:string;
	scale:number;
	img_W_on:string;
	CustomString:string;
	mask_image:string;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	z_index:number;
	event:_OBJ__GUIEvent;
	img_W_off:string;
	low_level:boolean;
	img_S_off:string;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	round_corner_radius:number;
	opacity:number;
	clip:boolean;
	color:string;
	enable_drag:boolean;
	Name:string;
	swallow_event:boolean;
	static:boolean;
	img_A_off:string;
	layout:_OBJ__GUILayout;
	rotate:number;
	img_D_on:string;
	show:boolean;
	img_A_on:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_技能摇杆 extends _OBJ__gui_ctrl_gui_ctrl{
	cast_slider_panel_disable:string;
	center_ratio:number;
	border:_OBJ__GUIBorder;
	color:string;
	skill_charge_cool:string;
	skill_stack_bg:string;
	swallow_events:string;
	can_press_on_cool:boolean;
	outer_ratio:number;
	skill_normal:string;
	vj_panel_scale:number;
	active_percent:number;
	cast_slider:string;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	opacity:number;
	press_region_type:number;
	layout:_OBJ__GUILayout;
	z_index:number;
	is_vj_center:boolean;
	enable_drag:boolean;
	low_level:boolean;
	mask_image:string;
	round_corner_radius:number;
	CustomString:string;
	skill_locked:string;
	rotate:number;
	static:boolean;
	swallow_event:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	vj_panel_crop_margin:number;
	flip_x:boolean;
	skill_click:string;
	scale:number;
	clip:boolean;
	image:string;
	skill_cool:string;
	shortcut_key_bg:string;
	Name:string;
	cast_slider_panel:string;
	skill:Skill;
	skill_icon_mask:string;
	skill_disable:string;
	event:_OBJ_lib_control_技能摇杆GUIEvent;
	skill_toggleon:string;
	show:boolean;
	enable_drop:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_normal_rect extends _OBJ__gui_ctrl_gui_ctrl{
	opacity:number;
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	decoration_image:string;
	decoration_layout_right:_OBJ__GUILayout;
	flip_y:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	layout:_OBJ__GUILayout;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	scale:number;
	round_corner_radius:number;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	transition:_OBJ__GUITransition;
	mask_image:string;
	style:string;
	is_decoration:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	decoration_layout_left:_OBJ__GUILayout;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_摇杆 extends _OBJ__gui_ctrl_gui_ctrl{
	vj_is_press_center:boolean;
	border:_OBJ__GUIBorder;
	rotate:number;
	enable_drop:boolean;
	vj_relative_x:number;
	swallow_events:string;
	scale:number;
	vj_main_move_radius:number;
	vj_is_release_reset:boolean;
	mask_image:string;
	vj_relative_y:number;
	flip_y:boolean;
	vj_bg_image:string;
	z_index:number;
	event:_OBJ_lib_control_移动摇杆GUIEvent;
	vj_main_image:string;
	vj_main_move_ratio:number;
	opacity:number;
	vj_bg_toggle_show:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	flip_x:boolean;
	vj_main_size:number;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	static:boolean;
	round_corner_radius:number;
	CustomString:string;
	low_level:boolean;
	vj_main_toggle_show:boolean;
	vj_active_percent:number;
	enable_drag:boolean;
	Name:string;
	color:string;
	enable:boolean;
	image:string;
	layout:_OBJ__GUILayout;
	clip:boolean;
	vj_size:number;
	show:boolean;
	vj_press_region_type:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_simpleui_picture extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	zoom_type:string;
	low_level:boolean;
	enable_drop:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	can_be_clicked:boolean;
	scale:number;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	visiblity:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	round_corner_radius:number;
	rotate:number;
	Name:string;
	CustomString:string;
	static:boolean;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	opacity:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_移动摇杆 extends _OBJ__gui_ctrl_gui_ctrl{
	vj_is_main_slider:boolean;
	vj_is_press_center:boolean;
	vj_auto_move:boolean;
	border:_OBJ__GUIBorder;
	vj_press_region_type:number;
	enable_drop:boolean;
	vj_active_percent:number;
	swallow_events:string;
	clip:boolean;
	vj_is_release_reset:boolean;
	opacity:number;
	mask_image:string;
	show:boolean;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	layout:_OBJ__GUILayout;
	vj_stop_percent:number;
	toggle_show:boolean;
	z_index:number;
	event:_OBJ_lib_control_移动摇杆GUIEvent;
	enable_drag:boolean;
	slider_bg_image:string;
	scale:number;
	CustomString:string;
	slider_relative_x:number;
	Name:string;
	rotate:number;
	static:boolean;
	swallow_event:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	slow_rate:number;
	round_corner_radius:number;
	flip_x:boolean;
	is_main_slider:boolean;
	vj_move_ratio:number;
	vj_move_radius:number;
	vj_toggle_show:boolean;
	slider_size:number;
	vj_slow_percent:number;
	vj_slider_width:number;
	slider_relative_y:number;
	slider_image:string;
	low_level:boolean;
	color:string;
	slider_mini_image:string;
	vj_slider_height:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_game_options_gui_ctrl_设置按钮 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	opacity:number;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	scale:number;
	show_localization_panel:boolean;
	swallow_events:string;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_msgbox extends _OBJ__gui_ctrl_gui_ctrl{
	msgbox_icon_image:string;
	on_yes:(this: void, )=>void;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	is_show_icon:boolean;
	on_cancel:(this: void, )=>void;
	clip:boolean;
	CustomString:string;
	mask_image:string;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	z_index:number;
	msgbox_image:string;
	enable_drag:boolean;
	low_level:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	round_corner_radius:number;
	opacity:number;
	rotate:number;
	on_no:(this: void, )=>void;
	event:_OBJ__GUIEvent;
	on_press_btn:(this: void, )=>void;
	Name:string;
	swallow_events:string;
	image:string;
	style:number;
	layout:_OBJ__GUILayout;
	scale:number;
	static:boolean;
	show:boolean;
	msgbox_text:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_多功能格子 extends _OBJ__gui_ctrl_gui_ctrl{
	bind_slot:Slot;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	show_tips:boolean;
	swallow_events:string;
	show_frame:boolean;
	clip:boolean;
	CustomString:string;
	mask_image:string;
	flip_y:boolean;
	bind_item_link:IdPreset<"item_id">;
	z_index:number;
	event:_OBJ__GUIEvent;
	bind_item:Item;
	low_level:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	round_corner_radius:number;
	opacity:number;
	rotate:number;
	children:Array<IdPreset<"gui_ctrl_id">>;
	enable_drag:boolean;
	can_use:boolean;
	Name:string;
	bind_loot_link:IdPreset<"loot_id">;
	scale:number;
	show_bg:boolean;
	layout:_OBJ__GUILayout;
	swallow_event:boolean;
	static:boolean;
	show:boolean;
	show_num:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_自定义背包面板 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	show:boolean;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	scale:number;
	inv_link:string;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	static:boolean;
	round_corner_radius:number;
	Name:string;
	CustomString:string;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	drop_mode:_OBJ__DropMode;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_simpleui_text extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	clip:boolean;
	scale:number;
	border:_OBJ__GUIBorder;
	color:string;
	can_be_clicked:boolean;
	transition:_OBJ__GUITransition;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	auto_line_feed:boolean;
	visiblity:boolean;
	swallow_event:boolean;
	static:boolean;
	font_size:number;
	round_corner_radius:number;
	Name:string;
	CustomString:string;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	enable_drop:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_simpleui_button extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	scale:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	transition:_OBJ__GUITransition;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	visiblity:boolean;
	flip_y:boolean;
	swallow_event:boolean;
	static:boolean;
	round_corner_radius:number;
	Name:string;
	CustomString:string;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	text:string;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	can_be_clicked:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_背包入口 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	image:string;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_attachable_panel extends _OBJ__gui_ctrl_gui_ctrl{
	hide_on_unit_invisible:boolean;
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	transition:_OBJ__GUITransition;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	swallow_event:boolean;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	flip_y:boolean;
	static:boolean;
	rotate:number;
	round_corner_radius:number;
	_attach_unit:Unit;
	Name:string;
	scale_by_distance:boolean;
	CustomString:string;
	mask_image:string;
	layout:_OBJ__GUILayout;
	socket_name:string;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	scale:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_active_button extends _OBJ__gui_ctrl_gui_ctrl{
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	Asset:string;
	swallow_events:string;
	scale:number;
	CustomString:string;
	mask_image:string;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	click_scale:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	effect_speed:number;
	active_image:string;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	round_corner_radius:number;
	click_color:string;
	click_opacity:number;
	Name:string;
	opacity:number;
	clip:boolean;
	static:boolean;
	layout:_OBJ__GUILayout;
	rotate:number;
	swallow_event:boolean;
	show:boolean;
	z_index:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_拾取列表 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	image:string;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_progress extends _OBJ__gui_ctrl_gui_ctrl{
	name_width:number;
	is_name_show:boolean;
	border:_OBJ__GUIBorder;
	default_box_margin:number;
	enable_drop:boolean;
	progress_color:string;
	name_height_prop:number;
	swallow_events:string;
	clip:boolean;
	progress_image:string;
	description:string;
	progress_bg_color:string;
	CustomString:string;
	mask_image:string;
	value_max:number;
	value:number;
	children:Array<IdPreset<"gui_ctrl_id">>;
	default_name_width:number;
	z_index:number;
	name_width_prop:number;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	progress_text_show:boolean;
	is_merge_text:boolean;
	enable:boolean;
	name_pos_prop:string;
	progress_height:number;
	progress_type:string;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	round_corner_radius:number;
	flip_y:boolean;
	name_show:boolean;
	swallow_event:boolean;
	rotate:number;
	static:boolean;
	Name:string;
	scale:number;
	is_name_show_real:boolean;
	progress_width:number;
	layout:_OBJ__GUILayout;
	event:_OBJ__GUIEvent;
	color:string;
	show:boolean;
	progress_bg_image:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_mail_gui_ctrl_邮件按钮 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	image:string;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_中止施法区域 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	image:string;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_inventory_gui_ctrl_拾取按钮 extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	image:string;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_timershow extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	enable:boolean;
	gray:boolean;
	transition:_OBJ__GUITransition;
	swallow_event:boolean;
	flip_x:boolean;
	scale:number;
	opacity:number;
	swallow_events:string;
	image:string;
	static:boolean;
	rotate:number;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	clip:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_lib_control_gui_ctrl_技能摇杆组 extends _OBJ__gui_ctrl_gui_ctrl{
	cast_slider_panel_disable:string;
	center_ratio:number;
	border:_OBJ__GUIBorder;
	color:string;
	skill_charge_cool:string;
	opacity:number;
	skill_stack_bg:string;
	skill_locked:string;
	swallow_events:string;
	rotate:number;
	flip_y:boolean;
	can_press_on_cool:boolean;
	layout:_OBJ__GUILayout;
	mask_image:string;
	round_corner_radius:number;
	outer_ratio:number;
	CustomString:string;
	skill_normal:string;
	vj_panel_scale:number;
	active_percent:number;
	cast_slider:string;
	Name:string;
	base_y:number;
	children:Array<IdPreset<"gui_ctrl_id">>;
	static:boolean;
	swallow_event:boolean;
	enable:boolean;
	z_index:number;
	is_vj_center:boolean;
	total_angle_delta:number;
	skill_attack_normal:string;
	max_skill_count:number;
	scale:number;
	attack_button_size:number;
	clip:boolean;
	enable_drop:boolean;
	image:string;
	gray:boolean;
	init_angle:number;
	skill_toggleon:string;
	transition:_OBJ__GUITransition;
	vj_panel_crop_margin:number;
	flip_x:boolean;
	skill_click:string;
	low_level:boolean;
	min_around_dis:number;
	enable_drag:boolean;
	event:_OBJ__GUIEvent;
	button_size:number;
	auto_bind_key:boolean;
	cast_slider_panel:string;
	shortcut_key_bg:string;
	skill_cool:string;
	skill_disable:string;
	skill_icon_mask:string;
	press_region_type:number;
	show:boolean;
	base_x:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_normal_btn extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	scale:number;
	transition:_OBJ__GUITransition;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	text_opacity:number;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	flip_y:boolean;
	text_color:string;
	swallow_event:boolean;
	static:boolean;
	round_corner_radius:number;
	Name:string;
	CustomString:string;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	text:string;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	active_image:string;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_btn_icon extends _OBJ__gui_ctrl_gui_ctrl{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	opacity:number;
	scale:number;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	transition:_OBJ__GUITransition;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	clip:boolean;
	icon:string;
	swallow_event:boolean;
	static:boolean;
	rotate:number;
	is_on:boolean;
	Name:string;
	CustomString:string;
	round_corner_radius:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	flip_y:boolean;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	is_switch:boolean;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_get_items_lobby_resource_Lobby_Resource extends _OBJ__lobby_resource_lobby_resource{
	IdName:string;
	Desc:string;
	Name:string;
	ItemType:IdPreset<"item_id">;
	TokenName:string;
	CustomParams:Array<IdPreset<"link_node_id">>;
	Rare:number;
	Count:number;
	SmallIcon:string;
	Icon:string;
	LobbyResourceType:_OBJ_smallcard_get_items_LobbyResourceType;
	Link:IdPreset<"lobby_resource_id">;
	/** @noSelf */
	CustomGetHandler:(this: void, 玩家:Player, 提交请求:ScoreCommitter, 资源:string, 数量:number, 外部参数:string)=>[smallcard_get_items.lobby_resource_instance]
	constructor()
}
declare class _OBJ_smallcard_get_items_lobby_resource_gain_group_Lobby_Resource_Gain_Group extends _OBJ__lobby_resource_gain_group_lobby_resource_gain_group{
	Array:Array<IdPreset<"lobby_resource_gain_id">>;
	Name:string;
	Link:IdPreset<"lobby_resource_gain_group_id">;
	constructor()
}
declare class _OBJ_gameui_gui_ctrl_transition_label extends _OBJ__gui_ctrl_label{
	z_index:number;
	event:_OBJ__GUIEvent;
	enable_drag:boolean;
	low_level:boolean;
	clip:boolean;
	transition:_OBJ__GUITransition;
	border:_OBJ__GUIBorder;
	color:string;
	enable_drop:boolean;
	swallow_event:boolean;
	enable:boolean;
	gray:boolean;
	swallow_events:string;
	image:string;
	flip_x:boolean;
	scale:number;
	text:string;
	font:_OBJ__Font;
	flip_y:boolean;
	static:boolean;
	round_corner_radius:number;
	Name:string;
	CustomString:string;
	rotate:number;
	mask_image:string;
	layout:_OBJ__GUILayout;
	number_transition:_OBJ__GUITransitionSubType;
	children:Array<IdPreset<"gui_ctrl_id">>;
	show:boolean;
	opacity:number;
	Link:IdPreset<"gui_ctrl_id">;
	constructor()
}
declare class _OBJ_smallcard_get_items_lobby_resource_ResourceTicket extends _OBJ_smallcard_get_items_lobby_resource_Lobby_Resource{
	IdName:string;
	Desc:string;
	Icon:string;
	SmallIcon:string;
	Count:number;
	Name:string;
	PerLastTime:number;
	CustomParams:Array<IdPreset<"link_node_id">>;
	PerLastCount:number;
	Rare:number;
	TokenName:string;
	ItemType:IdPreset<"item_id">;
	TicketName:string;
	LobbyResourceType:_OBJ_smallcard_get_items_LobbyResourceType;
	Link:IdPreset<"lobby_resource_id">;
	/** @noSelf */
	CustomGetHandler:(this: void, 玩家:Player, 提交请求:ScoreCommitter, 资源:string, 数量:number, 外部参数:string)=>[smallcard_get_items.lobby_resource_instance]
	constructor()
}
declare class _OBJ_smallcard_get_items_link_node_LinkNodeLobbyResource extends _OBJ__link_node_LinkNode{
	Value:IdPreset<"lobby_resource_id">;
	IsArray:boolean;
	Array:Array<IdPreset<"lobby_resource_id">>;
	Name:string;
	Link:IdPreset<"link_node_id">;
	constructor()
}
declare const enum _OBJ__Unit_Filter {
	["自动复活"] = "自动复活",
}
declare const enum _OBJ__KeyValueAttribute_Key {
	["复活时间"] = "复活时间",
	["金币"] = "金币",
}
declare const enum _OBJ__BuffCategory {
	["负面效果"] = "负面效果",
	["持续性治疗"] = "持续性治疗",
	["位移效果"] = "位移效果",
	["控制效果"] = "控制效果",
	["正面效果"] = "正面效果",
	["持续性伤害"] = "持续性伤害",
}
declare const enum _OBJ__UnitPropertySubTypeEx {
}
declare const enum _OBJ__Spell_attack_speed_attribute {
	["复活时间"] = "复活时间",
	["金币"] = "金币",
}
declare const enum _OBJ__DamageType {
}
declare const enum _OBJ__PlayerAttribute {
}
declare const enum _OBJ__SpellAttribute_Key {
}
declare const enum _OBJ__AbilCategory {
}
declare const enum _OBJ__UnitAttribute {
	["复活时间"] = "复活时间",
	["金币"] = "金币",
}
declare const enum _OBJ__GameOptionUIItem_DataType {
}
declare const enum _OBJ_smallcard_inventory_AttributeFormat {
}
declare const enum _OBJ_smallcard_get_items_LobbyResourceType {
}
